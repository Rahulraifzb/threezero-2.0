# Generated by Django 3.2.7 on 2021-09-15 11:25

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MultipleChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='question')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('explanation', models.TextField(blank=True, verbose_name='Explain your answer')),
                ('categories', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(verbose_name='answer')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Public'), (3, 'Close')], default=1, verbose_name='status')),
                ('type', models.IntegerField(choices=[(1, 'After Lecture'), (2, 'Assessment'), (3, 'Exam')], default=2, verbose_name='quiz type')),
                ('published', models.DateTimeField(verbose_name='published')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('date_modified', models.DateTimeField(auto_now_add=True, verbose_name='date_modified')),
                ('allow_skipping', models.BooleanField(default=False)),
                ('allow_jumping', models.BooleanField(default=False)),
                ('backwards_navigation', models.BooleanField(default=False)),
                ('random_question', models.BooleanField(default=False)),
                ('feedback', models.IntegerField(choices=[(1, 'At the end of the quiz'), (2, 'After each question'), (3, "Don't disclose")], default=1, verbose_name='feedback')),
                ('multiple_takes', models.BooleanField(default=False)),
                ('no_of_takes_per_month', models.IntegerField(default=3, verbose_name='no. of times this quiz can be taken by the candidate per month')),
                ('no_of_instances_per_month', models.IntegerField(default=20, verbose_name='no. of times this quiz can be taken by the candidate per month')),
                ('categories', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('questions', models.ManyToManyField(to='quiz.MultipleChoice')),
                ('setter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'quiz',
                'verbose_name_plural': 'quizzes',
                'db_table': 'quizzes',
                'ordering': ('-published',),
            },
        ),
        migrations.CreateModel(
            name='QuizInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_taken', models.DateTimeField(auto_now_add=True, verbose_name='quiz taken')),
                ('score', models.IntegerField(default=0)),
                ('complete', models.BooleanField(default=False)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quiz')),
                ('taker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_taken', models.DateTimeField(auto_now_add=True, verbose_name='When was the question posed')),
                ('time_taken_delta', models.DateTimeField(blank=True, verbose_name='When was the question answered')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.multiplechoice')),
                ('quiz_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quizinstance')),
                ('response', models.ManyToManyField(related_name='response', to='quiz.MultipleChoiceAnswer')),
            ],
        ),
        migrations.AddField(
            model_name='multiplechoice',
            name='choices',
            field=models.ManyToManyField(to='quiz.MultipleChoiceAnswer'),
        ),
        migrations.AddField(
            model_name='multiplechoice',
            name='correct_answer',
            field=models.ManyToManyField(blank=True, related_name='correct', to='quiz.MultipleChoiceAnswer'),
        ),
    ]
